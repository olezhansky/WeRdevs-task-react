{"version":3,"sources":["components/Header/Header.module.scss","components/HomeContainer/Calendar/Calendar.module.scss","components/Modal/Modal.module.scss","components/HomeContainer/Content/Content.module.scss","pages/About/About.module.scss","components/HomeContainer/Calendar/Week/Week.module.scss","pages/Home/Home.module.scss","components/Header/Header.jsx","pages/About/About.jsx","components/HomeContainer/Calendar/calendarLogic.js","components/HomeContainer/Calendar/Week/Week.jsx","components/Modal/Modal.jsx","store/types.js","components/HomeContainer/Calendar/Calendar.jsx","store/actions.js","components/HomeContainer/Content/Content.jsx","pages/Home/Home.jsx","App.js","reportWebVitals.js","store/rootReducer.js","store/store.js","index.js"],"names":["module","exports","Header","className","styles","Wrapepr","Logo","LogoBlock","LogoLeftPart","LogoRightPart","Menu","Item","to","activeClassName","ItemActive","About","Wrapper","Title","Text","DAYS_IN_MONTH","WEEK_DAYS_FROM_SUNDAY","getMonthData","year","month","result","date","Date","daysInMonth","getMonth","getFullYear","isLeapYear","getDaysInMonth","monthStartsOn","dayOfWeek","getDay","getDayOfWeek","day","i","j","undefined","Week","week","dayClick","currentDate","selectedDate","todayHandle","a","b","getDate","map","index","classnames","onClick","getTime","Modal","modalActive","setModalActive","dayOfWeekFullName","useSelector","state","handleClose","onChangeHandle","console","log","ModalActive","ModalContent","e","stopPropagation","ButtonClose","style","fontSize","Form","type","onChange","value","toLocaleString","defaultProps","PREV_MONTH","NEXT_MONTH","SELECT_DAY","Calendar","useState","dispatch","useDispatch","months","handleDayClick","payload","selectDayAction","monthName","length","monthsData","calendarLogic","Container","Months","color","cursor","MonthsText","CalendarContainer","DaysOfTheWeek","dayOftheWeek","DayOftheWeek","Content","ContentBlock","Home","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","devTools","window","__REDUX_DEVTOOLS_EXTENSION__","f","store","createStore","action","compose","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c6f250f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapepr\":\"Header_Wrapepr__32m1T\",\"LogoBlock\":\"Header_LogoBlock__247hS\",\"LogoLeftPart\":\"Header_LogoLeftPart__2FSDC\",\"LogoRightPart\":\"Header_LogoRightPart__sq0p4\",\"Menu\":\"Header_Menu__YnFM7\",\"Item\":\"Header_Item__1TmMy\",\"ItemActive\":\"Header_ItemActive__1SDqP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Calendar_Wrapper__3Fzas\",\"Container\":\"Calendar_Container__2s00b\",\"Months\":\"Calendar_Months__SxJB2\",\"MonthsText\":\"Calendar_MonthsText__2Hl3C\",\"CalendarContainer\":\"Calendar_CalendarContainer__25UgZ\",\"DaysOfTheWeek\":\"Calendar_DaysOfTheWeek__2exnc\",\"DayOftheWeek\":\"Calendar_DayOftheWeek__3rvke\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__2elm2\",\"ModalActive\":\"Modal_ModalActive__27TcE\",\"ModalContent\":\"Modal_ModalContent__2aL_T\",\"ButtonClose\":\"Modal_ButtonClose__atYWV\",\"Form\":\"Modal_Form__2AZvd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Content_Wrapper__1Ui4P\",\"ContentBlock\":\"Content_ContentBlock__3ebpT\",\"Title\":\"Content_Title__2-AS9\",\"Text\":\"Content_Text__1ZkS9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"About_Wrapper__3ZQmf\",\"Title\":\"About_Title__3TYA_\",\"Text\":\"About_Text__m2Ufg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Week\":\"Week_Week__2g2-Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Home_Wrapper__3VwYh\"};","import React from 'react';\r\nimport styles from './Header.module.scss'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className={styles.Wrapepr}>\r\n            <div className={styles.Logo}>\r\n                <div className={styles.LogoBlock}>\r\n                    <div className={styles.LogoLeftPart}>\r\n                        <span>w</span>\r\n                        <span>e</span>\r\n                    </div>\r\n                    <p className={styles.LogoRightPart}>\r\n                        <span>R</span>devs\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <ul className={styles.Menu}>\r\n                <li className={styles.Item}>\r\n                    <NavLink to=\"/home\" activeClassName={styles.ItemActive}>\r\n                       Home\r\n                    </NavLink>\r\n                </li>\r\n                <li className={styles.Item}>\r\n                    <NavLink to=\"/about\" activeClassName={styles.ItemActive}>\r\n                        About us\r\n                    </NavLink>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport styles from './About.module.scss';\r\n\r\nconst About = () => {\r\n    return (\r\n        <div className={styles.Wrapper}>\r\n            <h2 className={styles.Title}>Lorem ipsum creation timelines</h2>\r\n            <div className={styles.Text}>\r\n                <p>\r\n                    So how did the classical Latin become so incoherent? \r\n                    According to McClintock, a 15th century typesetter likely scrambled part of \r\n                    Cicero's De Finibus in order to provide placeholder text to mockup various fonts \r\n                    for a type specimen book. \r\n                </p>\r\n                <p>\r\n                    It's difficult to find examples of lorem ipsum in use \r\n                    before Letraset made it popular as a dummy text in the 1960s, although McClintock \r\n                    says he remembers coming across the lorem ipsum passage in a book of old metal type \r\n                    samples. So far he hasn't relocated where he once saw the passage, but the popularity \r\n                    of Cicero in the 15th century supports the theory that the filler text has been used \r\n                    for centuries.\r\n                </p>\r\n                <p>\r\n                    And anyways, as Cecil Adams reasoned, “[Do you really] think graphic arts \r\n                    supply houses were hiring classics scholars in the 1960s?” Perhaps. But it seems reasonable \r\n                    to imagine that there was a version in use far before the age of Letraset.\r\n                </p>\r\n                <p>\r\n                    McClintock wrote to Before &#38; After to explain his discovery:<br />\r\n                    “What I find remarkable is that this text has \r\n                    been the industry's standard dummy text ever since some printer in the 1500s took a galley \r\n                    of type and scrambled it to make a type specimen book; it has survived not only four centuries \r\n                    of letter-by-letter resetting but even the leap into electronic typesetting, essentially \r\n                    unchanged except for an occasional 'ing' or 'y' thrown in. It's ironic that when the \r\n                    then-understood Latin was scrambled, it became as incomprehensible as Greek; the phrase \r\n                    'it's Greek to me' and 'greeking' have common semantic roots!” (The editors published his \r\n                    letter in a correction headlined “Lorem Oopsum”).\r\n                </p>\r\n           \r\n        \r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default About;","const DAYS_IN_WEEK = 7;\r\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\nconst WEEK_DAYS_FROM_SUNDAY = [0, 1, 2, 3, 4, 5, 6];\r\nconst monthFebruary = 1;\r\n\r\nexport function isLeapYear(year) {\r\n  return !(year % 4 || (!(year % 100) && year % 400));\r\n}\r\n\r\nexport function getDaysInMonth(date) {\r\n  const month = date.getMonth();\r\n  const year = date.getFullYear();\r\n  const daysInMonth = DAYS_IN_MONTH[month];\r\n\r\n  if (isLeapYear(year) && month === monthFebruary) {\r\n    return daysInMonth + 1;\r\n  } else {\r\n    return daysInMonth;\r\n  }\r\n}\r\n\r\nexport function getDayOfWeek(date) {\r\n  const dayOfWeek = date.getDay();\r\n  return WEEK_DAYS_FROM_SUNDAY[dayOfWeek];\r\n}\r\n\r\nexport function getMonthData(year, month) {\r\n  const result = [];\r\n  const date = new Date(year, month);\r\n  const daysInMonth = getDaysInMonth(date);\r\n  const monthStartsOn = getDayOfWeek(date);\r\n  let day = 1;\r\n\r\n  for (let i = 0; i < (daysInMonth + monthStartsOn) / DAYS_IN_WEEK; i++) {\r\n    result[i] = [];\r\n\r\n    for (let j = 0; j < DAYS_IN_WEEK; j++) {\r\n      if ((i === 0 && j < monthStartsOn) || day > daysInMonth) {\r\n        result[i][j] = undefined;\r\n      } else {\r\n        result[i][j] = new Date(year, month, day++);\r\n      }\r\n    }\r\n  }\r\n  return result;\r\n}\r\n","import React from 'react';\r\nimport styles from './Week.module.scss';\r\nimport './Week.scss';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst Week = ({week, dayClick, currentDate, selectedDate }) => {\r\n    \r\n    const todayHandle = (a, b) => {\r\n        if (!a || !b) return false;\r\n        return (\r\n          a.getFullYear() === b.getFullYear() &&\r\n          a.getMonth() === b.getMonth() &&\r\n          a.getDate() === b.getDate()\r\n        );\r\n    }\r\n    \r\n    return (\r\n        <li className={styles.Week}>\r\n            {week.map((day, index) => {       \r\n                if (day) {\r\n                    return  (\r\n                        <p\r\n                            key={day.getTime()}\r\n                            className={classnames('Day', {\r\n                                'Today': todayHandle(day, currentDate),\r\n                                'Selected': todayHandle(day, selectedDate)\r\n                            })}\r\n                            onClick={() => dayClick(day)}\r\n                        >\r\n                            {day.getDate()}\r\n                        </p>\r\n                    )\r\n                } else {\r\n                    return <p key={index}>{''}</p> \r\n                }\r\n            })}\r\n        </li> \r\n    )\r\n}\r\n\r\nWeek.propTypes = {\r\n    week: PropTypes.array,\r\n    dayClick: PropTypes.func,\r\n};\r\n\r\nexport default Week;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\nimport { VscClose } from 'react-icons/vsc';\r\nimport styles from './Modal.module.scss';\r\n\r\nconst Modal = ({ modalActive, setModalActive, selectedDate }) => {\r\n    const dayOfWeekFullName = useSelector((state) => state.dayOfWeekFullName);\r\n\r\n    if (!selectedDate) return null;\r\n\r\n    const handleClose = () => {\r\n        setModalActive(false);\r\n    };\r\n\r\n    const onChangeHandle = () => {\r\n        console.log('onChange');\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className={modalActive ? styles.ModalActive : styles.Modal}\r\n            onClick={handleClose}\r\n        >\r\n            <div className={styles.ModalContent} onClick={(e) => e.stopPropagation()}>\r\n                <div className={styles.ButtonClose}>\r\n                    <button  onClick={handleClose}>\r\n                        <VscClose style={{fontSize: '16px'}}/>\r\n                    </button>\r\n                </div>\r\n                <form className={styles.Form}>\r\n                    <label>Month\r\n                        <input \r\n                            type=\"text\" \r\n                            onChange={onChangeHandle} \r\n                            value={selectedDate.toLocaleString('en-us', { month: 'long' })} \r\n                        />\r\n                    </label>\r\n                    <label>Day\r\n                        <input \r\n                            type=\"text\" \r\n                            onChange={onChangeHandle} \r\n                            value={`${selectedDate.getDate()}th ${dayOfWeekFullName[selectedDate.getDay()]}` }\r\n                        />\r\n                    </label>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nModal.propTypes = {\r\n    modalActive: PropTypes.bool,\r\n    setModalActive: PropTypes.func\r\n};\r\n\r\nModal.defaultProps = {\r\n    setModalActive: false\r\n};\r\n\r\nexport default Modal;","export const PREV_MONTH = 'PREV_MONTH';\r\nexport const NEXT_MONTH = 'NEXT_MONTH';\r\nexport const SELECT_DAY = 'SELECT_DAY';\r\n","import React, {useState} from 'react';\r\nimport { GoChevronLeft, GoChevronRight } from 'react-icons/go';\r\nimport * as calendarLogic from './calendarLogic';\r\nimport Week from './Week/Week';\r\nimport Modal from '../../Modal/Modal';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { prevMonthAction,nextMonthAction, selectDayAction } from '../../../store/actions';\r\nimport styles from './Calendar.module.scss'\r\n\r\nconst Calendar = () =>  {\r\n\r\n    const [modalActive, setModalActive] = useState(false);\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const date = useSelector((state) => state.date);\r\n    const dayOfWeek = useSelector((state) => state.dayOfWeek);\r\n    const currentDate = useSelector((state) => state.currentDate);\r\n    const selectedDate = useSelector((state) => state.selectedDate);\r\n    const months = useSelector((state) => state.months);\r\n\r\n    const handlePrevMonth = () => {\r\n        dispatch(prevMonthAction());\r\n    };\r\n\r\n    const handleNextMonth = () => {\r\n        dispatch(nextMonthAction());\r\n    };\r\n\r\n    const handleDayClick = (date) => {\r\n        setModalActive(true);\r\n        dispatch(selectDayAction(date));\r\n    };\r\n\r\n    let monthName = '';\r\n\r\n    for (let i = 0; i < months.length; i++) {\r\n        if (date.getMonth() === i) {\r\n            monthName = months[i];\r\n        }\r\n    }\r\n\r\n    const monthsData = calendarLogic.getMonthData(date.getFullYear(), date.getMonth());\r\n    \r\n    return (\r\n        <div className={styles.Wrapper}>\r\n            <div className={styles.Container}>\r\n                <div className={styles.Months}>\r\n                    <div onClick={handlePrevMonth}>\r\n                        <GoChevronLeft style={{color: '#DFDFDF', fontSize: '20px', cursor: 'pointer'}} />\r\n                    </div>\r\n                    <div className={styles.MonthsText}>\r\n                        {monthName} {date.getFullYear()}\r\n                    </div>\r\n                    <div onClick={handleNextMonth}>\r\n                        <GoChevronRight style={{color: '#DFDFDF', fontSize: '20px', cursor: 'pointer'}}/>\r\n                    </div>\r\n                </div>\r\n                <ul className={styles.CalendarContainer}>\r\n                    {monthsData.map((week, index) => {\r\n                        return <Week \r\n                                    week={week} \r\n                                    key={index} \r\n                                    dayClick={handleDayClick} \r\n                                    currentDate={currentDate}\r\n                                    selectedDate={selectedDate} \r\n                                />\r\n                        })\r\n                    }\r\n                </ul>\r\n                <div className={styles.DaysOfTheWeek}>\r\n                    {dayOfWeek.map((dayOftheWeek, index) => {\r\n                        return <span key={index} className={styles.DayOftheWeek}>{dayOftheWeek}</span>\r\n                    })}\r\n                </div>\r\n            </div>\r\n            <Modal modalActive={modalActive} setModalActive={setModalActive} selectedDate={selectedDate}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Calendar;","import { PREV_MONTH, NEXT_MONTH, SELECT_DAY } from './types';\r\n\r\nexport const prevMonthAction = () => ({\r\n  type: PREV_MONTH,\r\n});\r\n\r\nexport const nextMonthAction = () => ({\r\n  type: NEXT_MONTH,\r\n});\r\n\r\nexport const selectDayAction = (date) => ({\r\n  type: SELECT_DAY,\r\n  payload: date,\r\n});\r\n","import React from 'react';\r\nimport styles from './Content.module.scss';\r\n\r\nconst Content = () => {\r\n    return (\r\n        <div className={styles.Wrapper}>\r\n            <div className={styles.ContentBlock}>\r\n                <h2 className={styles.Title}>Choose the day for the meeting</h2>\r\n                <p className={styles.Text}>\r\n                    We encourage you to book your appointment online. This will save you time.\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Content;","import React from 'react';\r\nimport Calendar from '../../components/HomeContainer/Calendar/Calendar';\r\nimport Content from '../../components/HomeContainer/Content/Content';\r\nimport styles from './Home.module.scss';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className={styles.Wrapper}>\r\n            <Content />\r\n            <Calendar />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport Header from './components/Header/Header';\r\nimport About from './pages/About/About';\r\nimport Home from './pages/Home/Home';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='wrapper'>\r\n      <Header />\r\n      <Switch>\r\n        <Route path='/home'>\r\n          <Home />\r\n        </Route>\r\n        <Route path='/about'>\r\n          <About />\r\n        </Route>\r\n        <Redirect to='/home' />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { PREV_MONTH, NEXT_MONTH, SELECT_DAY } from './types';\r\n\r\nconst initialState = {\r\n  date: new Date(),\r\n  months: [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n  ],\r\n  dayOfWeek: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\r\n  dayOfWeekFullName: [\r\n    'Sunday',\r\n    'Monday',\r\n    'Tuesday',\r\n    'Wednesday',\r\n    'Thursday',\r\n    'Friday',\r\n    'Saturday',\r\n  ],\r\n  currentDate: new Date(),\r\n  selectedDate: null,\r\n};\r\n\r\nexport const rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case PREV_MONTH:\r\n      return {\r\n        ...state,\r\n        date: new Date(state.date.getFullYear(), state.date.getMonth() - 1)\r\n      };\r\n    case NEXT_MONTH:\r\n      return {\r\n        ...state,\r\n        date: new Date(state.date.getFullYear(), state.date.getMonth() + 1)\r\n      };\r\n    case SELECT_DAY:\r\n      return {\r\n        ...state,\r\n        selectedDate: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, compose } from 'redux';\r\nimport { rootReducer } from './rootReducer';\r\n\r\nconst devTools = window.__REDUX_DEVTOOLS_EXTENSION__\r\n  ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  : (f) => f;\r\n\r\nconst store = createStore(rootReducer, compose(devTools));\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './store/store';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}